<script src="//maps.google.com/maps/api/js?v=3.18&sensor=false&client=&key=&libraries=geometry&language=&hl=&region="></script>
<script src="/javascripts/markerclusterer.js"></script>
<script src='/javascripts/infobox.js' type='text/javascript'></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js"></script>
<script src='/javascripts/underscore.js' type='text/javascript'></script>
<script src='/javascripts/gmaps_google.js' type='text/javascript'></script>
<script src='/javascripts/jquery.csv.js' type='text/javascript'></script>

<div style='width: 100%; height: 100%'>
  <div id="map" style='width: 100%; height: 100%;'></div>
</div>

<script>
  var stops = [];
  var yellow_poly = [];
  var green_poly = [];

  $(document).ready(function() {
    $.ajax({
        type: "GET",
        url: "stops.csv",
        success: function(data) {
          stops = $.csv.toObjects(data);
          draw();
        }
     });
  });


  function draw() {
    // close enough to accurate
    var mile_lat = 0.015;
    var mile_lng = 0.02;

    for (var i = 0; i < stops.length; i++) {
      var stop = stops[i];

      if (stop.include == 'FALSE') {
        continue;
      }

      latlng = stop.location.match(/-?\d+\.\d+/g);
      lat = parseFloat(latlng[0]);
      lng = parseFloat(latlng[1]);

      yellow_poly.push([
        { lat: lat + (mile_lat * 0.6), lng: lng },
        { lat: lat, lng: lng + (mile_lng * 0.6) },
        { lat: lat - (mile_lat * 0.6), lng: lng },
        { lat: lat, lng: lng - (mile_lng * 0.6) },
      ]);

      if (stop.prefer == 'TRUE') {
        green_poly.push([
          { lat: lat + (mile_lat * 0.3), lng: lng },
          { lat: lat, lng: lng + (mile_lng * 0.3) },
          { lat: lat - (mile_lat * 0.3), lng: lng },
          { lat: lat, lng: lng - (mile_lng * 0.3) },
        ]);
      }
    }

    handler = Gmaps.build('Google');
    handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
      var yellow = handler.addPolygons(
        yellow_poly,
        {
          strokeColor: '#000000',
          strokeOpacity: 0.0,
          strokeWeight: 1,
          fillColor: '#FFCC33',
          fillOpacity: 0.33
        }
      );

      var green = handler.addPolygons(
        green_poly,
        {
          strokeColor: '#000000',
          strokeOpacity: 0.0,
          strokeWeight: 1,
          fillColor: '#00FF00',
          fillOpacity: 0.33
        }
      );

      handler.bounds.extendWith(yellow);
      handler.bounds.extendWith(green);

      handler.fitMapToBounds();
    });
  }
</script>
